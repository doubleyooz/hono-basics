export const CONTINUE = "Continue: The server has received the request headers and the client should proceed to send the request body.";
export const SWITCHING_PROTOCOLS = "Switching Protocols: The requester has asked the server to switch protocols.";
export const PROCESSING = "Processing: The server has received and is processing the request, but no response is available yet.";
export const EARLY_HINTS = "Early Hints: The server is likely to send a final response with the header fields included in the informational response.";

export const OK = "OK: The request has succeeded.";
export const CREATED = "Created: The request has been fulfilled and resulted in a new resource being created.";
export const ACCEPTED = "Accepted: The request has been accepted for processing, but the processing has not been completed.";
export const NON_AUTHORITATIVE_INFORMATION = "Non-Authoritative Information: The server successfully processed the request, but is returning information from another source.";
export const NO_CONTENT = "No Content: The server successfully processed the request and is not returning any content.";
export const RESET_CONTENT = "Reset Content: The server successfully processed the request, but is not returning any content and requires the requester to reset the document view.";
export const PARTIAL_CONTENT = "Partial Content: The server is delivering only part of the resource due to a range header sent by the client.";
export const MULTI_STATUS = "Multi-Status: The message body that follows is an XML message and can contain a number of separate response codes.";
export const ALREADY_REPORTED = "Already Reported: The members of a DAV binding have already been enumerated in a previous reply to this request.";
export const IM_USED = "IM Used: The server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.";

export const MULTIPLE_CHOICES = "Multiple Choices: The request has more than one possible response.";
export const MOVED_PERMANENTLY = "Moved Permanently: The resource has been moved to a new URL permanently.";
export const FOUND = "Found: The resource has been found at a different URL temporarily.";
export const SEE_OTHER = "See Other: The response to the request can be found under another URI using a GET method.";
export const NOT_MODIFIED = "Not Modified: The resource has not been modified since the version specified by the request headers.";
export const USE_PROXY = "Use Proxy: The requested resource is only available through a proxy, whose address is provided in the response.";
export const TEMPORARY_REDIRECT = "Temporary Redirect: The resource is temporarily located at a different URI.";
export const PERMANENT_REDIRECT = "Permanent Redirect: The resource has been permanently moved to a new URI.";

export const BAD_REQUEST = "Bad Request: The server could not understand the request due to invalid syntax.";
export const UNAUTHORIZED = "Unauthorized: Authentication is required and has failed or has not yet been provided.";
export const PAYMENT_REQUIRED = "Payment Required: Reserved for future use.";
export const FORBIDDEN = "Forbidden: You do not have permission to access the requested resource.";
export const NOT_FOUND = "Not Found: The requested resource could not be found on this server.";
export const METHOD_NOT_ALLOWED = "Method Not Allowed: The request method is known by the server but is not supported by the target resource.";
export const NOT_ACCEPTABLE = "Not Acceptable: The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.";
export const PROXY_AUTHENTICATION_REQUIRED = "Proxy Authentication Required: The client must first authenticate itself with the proxy.";
export const REQUEST_TIMEOUT = "Request Timeout: The server timed out waiting for the request.";
export const CONFLICT = "Conflict: The request could not be completed due to a conflict with the current state of the resource.";
export const GONE = "Gone: The requested resource is no longer available and will not be available again.";
export const LENGTH_REQUIRED = "Length Required: The request did not specify the length of its content, which is required by the requested resource.";
export const PRECONDITION_FAILED = "Precondition Failed: The server does not meet one of the preconditions that the requester put on the request.";
export const PAYLOAD_TOO_LARGE = "Payload Too Large: The request is larger than the server is willing or able to process.";
export const URI_TOO_LONG = "URI Too Long: The URI provided was too long for the server to process.";
export const UNSUPPORTED_MEDIA_TYPE = "Unsupported Media Type: The request entity has a media type which the server or resource does not support.";
export const RANGE_NOT_SATISFIABLE = "Range Not Satisfiable: The client has asked for a portion of the file, but the server cannot supply that portion.";
export const EXPECTATION_FAILED = "Expectation Failed: The server cannot meet the requirements of the Expect request-header field.";
export const IM_A_TEAPOT = "I'm a teapot: The server refuses to brew coffee because it is, permanently, a teapot.";
export const MISDIRECTED_REQUEST = "Misdirected Request: The request was directed at a server that is not able to produce a response.";
export const UNPROCESSABLE_ENTITY = "Unprocessable Entity: The server understands the content type of the request entity, but was unable to process the contained instructions.";
export const LOCKED = "Locked: The resource that is being accessed is locked.";
export const FAILED_DEPENDENCY = "Failed Dependency: The request failed due to failure of a previous request.";
export const TOO_EARLY = "Too Early: The server is unwilling to risk processing a request that might be replayed.";
export const UPGRADE_REQUIRED = "Upgrade Required: The client should switch to a different protocol.";
export const PRECONDITION_REQUIRED = "Precondition Required: The server requires the request to be conditional.";
export const TOO_MANY_REQUESTS = "Too Many Requests: The user has sent too many requests in a given amount of time.";
export const REQUEST_HEADER_FIELDS_TOO_LARGE = "Request Header Fields Too Large: The server is unwilling to process the request because its header fields are too large.";
export const UNAVAILABLE_FOR_LEGAL_REASONS = "Unavailable For Legal Reasons: The resource is unavailable for legal reasons.";

export const INTERNAL_SERVER_ERROR = "Internal Server Error: The server encountered an unexpected condition that prevented it from fulfilling the request.";
export const NOT_IMPLEMENTED = "Not Implemented: The server does not support the functionality required to fulfill the request.";
export const BAD_GATEWAY = "Bad Gateway: The server received an invalid response from the upstream server.";
export const SERVICE_UNAVAILABLE = "Service Unavailable: The server is currently unable to handle the request due to temporary overloading or maintenance.";
export const GATEWAY_TIMEOUT = "Gateway Timeout: The server did not receive a timely response from the upstream server.";
export const HTTP_VERSION_NOT_SUPPORTED = "HTTP Version Not Supported: The server does not support the HTTP protocol version used in the request.";
export const VARIANT_ALSO_NEGOTIATES = "Variant Also Negotiates: The server has an internal configuration error.";
export const INSUFFICIENT_STORAGE = "Insufficient Storage: The server is unable to store the representation needed to complete the request.";
export const LOOP_DETECTED = "Loop Detected: The server detected an infinite loop while processing the request.";
export const NOT_EXTENDED = "Not Extended: Further extensions to the request are required for the server to fulfill it.";
export const NETWORK_AUTHENTICATION_REQUIRED = "Network Authentication Required: The client needs to authenticate to gain network access.";
